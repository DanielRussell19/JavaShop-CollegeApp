/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Views;

import Models.Customer;
import Models.DBHandler;
import Models.Order;
import Models.Orderline;
import Models.Product;
import java.util.HashMap;
import java.util.Map;
import java.util.Optional;
import javax.swing.DefaultListModel;

//Author DanielRussell 22/1/2019

public class FrmCustomerViewProduct extends javax.swing.JFrame {

    //global attriubtes
    private Customer LoggedUser;
    private HashMap<Integer,Product> Products;
    private Order CustomerOrder;
    
    /**
     * Creates new form ViewProducts
     */
    
    //initalises private attributes and GUI Components, loads all products ready for display later
    public FrmCustomerViewProduct(Customer Cu) {
        initComponents();
    
    //initalisation of private attributes
        
        DBHandler DBH = new DBHandler();
        
        CustomerOrder = new Order();
        LoggedUser = Cu;
        Products = DBH.loadProducts();
        
        if(!LoggedUser.isRegistered()){
            this.btnViewBasket.setVisible(false);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnViewBasket = new javax.swing.JButton();
        btnHome = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        ScrClothing = new javax.swing.JScrollPane();
        lstCategories = new javax.swing.JList<>();
        ScrProduct = new javax.swing.JScrollPane();
        lstProducts = new javax.swing.JList<>();
        lblCategories = new javax.swing.JLabel();
        lblProduct = new javax.swing.JLabel();
        lblTitle = new javax.swing.JLabel();
        cmboQuantity = new javax.swing.JComboBox<>();
        lblComboTitle = new javax.swing.JLabel();
        lblError = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnViewBasket.setText("View Basket");
        btnViewBasket.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewBasketActionPerformed(evt);
            }
        });

        btnHome.setText("Return to home");
        btnHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHomeActionPerformed(evt);
            }
        });

        btnAdd.setText("Add to basket");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        lstCategories.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Clothing", "Footwear" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        lstCategories.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstCategoriesValueChanged(evt);
            }
        });
        ScrClothing.setViewportView(lstCategories);

        ScrProduct.setViewportView(lstProducts);

        lblCategories.setText("Categories");

        lblProduct.setText("Products");

        lblTitle.setText("View Products");

        cmboQuantity.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));

        lblComboTitle.setText("Quantity");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblCategories)
                            .addComponent(btnHome, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ScrClothing))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblTitle)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnViewBasket))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblProduct)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(ScrProduct)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblComboTitle)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmboQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAdd)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnViewBasket)
                    .addComponent(btnHome)
                    .addComponent(lblTitle))
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCategories)
                    .addComponent(lblProduct))
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ScrProduct, javax.swing.GroupLayout.DEFAULT_SIZE, 216, Short.MAX_VALUE)
                    .addComponent(ScrClothing))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnAdd)
                        .addComponent(cmboQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblComboTitle)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //reteives clothing or footwear instances and displays in listbox products
    private void lstCategoriesValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstCategoriesValueChanged
         String SelectCategory = this.lstCategories.getSelectedValue();
        
        DefaultListModel listmodel = new DefaultListModel();
        
        for(Map.Entry<Integer,Product> productentry: Products.entrySet()) {
            
            Product product = productentry.getValue();
            
            if(product.getClass().getName().equals("Models."+SelectCategory)){
                
                if(product.getStockLevel() >=1)
                {
                   listmodel.addElement(product); 
                }
                               
            }
        }
        
        this.lstProducts.setModel(listmodel);
    }//GEN-LAST:event_lstCategoriesValueChanged

    //returns to home form
    private void btnHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHomeActionPerformed
        
        if(LoggedUser.isRegistered()){
        FrmCustomerHome newFrm = new FrmCustomerHome(LoggedUser);
        this.dispose();
        newFrm.setVisible(true);  
        }
        else
        {
        FrmMainMenu newFrm = new FrmMainMenu();
        this.dispose();
        newFrm.setVisible(true);  
        }
        
    }//GEN-LAST:event_btnHomeActionPerformed

    //adds selected product to users order
    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        
        if(LoggedUser.isRegistered())
        {

            CustomerOrder = LoggedUser.findLatestOrder();

            int quantity = Integer.parseInt(String.valueOf(this.cmboQuantity.getSelectedItem()));
            Object selectedobject;
            Product product;

            Optional<Orderline> basket;
            
            if(lstProducts.getSelectedValue() == null)
            {
                this.lblError.setText("Error: please select a product");
            }
            else
            {
                selectedobject = (Object) this.lstProducts.getSelectedValue();
                product = (Product) selectedobject;

                basket = CustomerOrder.getProductsInBasket(product.getProductID());
            

                if(quantity <= product.getStockLevel() && product.getStockLevel() >=1 && quantity >0)
                {

                if(basket.isPresent())
                {
                    Orderline productinbasket = basket.get();

                    if(productinbasket == null)
                    {
                       productinbasket.setQuantity(productinbasket.getQuantity() + quantity);

                       productinbasket.setLineTotal(productinbasket.getLineTotal() + (product.getPrice() * quantity));

                       DBHandler DBH = new DBHandler();
                       DBH.editOrderLine(productinbasket);
                       CustomerOrder.calculateOrderTotal();

                       this.lblError.setText("Success added to basket"); 
                    }
                    else
                    {

                      this.lblError.setText("product already added"); 

                    }
                }
                else
                {

                       product.setStockLevel(product.getStockLevel()-quantity);

                       Orderline OL = new Orderline(CustomerOrder,product,quantity);
                       CustomerOrder.addOrderLine(OL);

                       CustomerOrder.changeProductStockLevel(product);

                       this.lblError.setText("Success added to basket"); 

                }

                }
                else
                {
                if(quantity == 0)
                {
                this.lblError.setText("Please select a quantity");
                }
                else
                {
                this.lblError.setText("insufficient stock");   
                }
                }
            }
        }
        else
        {
        FrmCustomerLogin newFrm = new FrmCustomerLogin();
        this.dispose();
        newFrm.setVisible(true);   
        }
    }//GEN-LAST:event_btnAddActionPerformed

    //navigates to viewbasket form
    private void btnViewBasketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewBasketActionPerformed
    FrmCustomerViewBasket newfrm = new FrmCustomerViewBasket(LoggedUser);
    this.dispose();
    newfrm.setVisible(true);
    }//GEN-LAST:event_btnViewBasketActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmCustomerViewProduct.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmCustomerViewProduct.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmCustomerViewProduct.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmCustomerViewProduct.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new FrmViewProducts().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane ScrClothing;
    private javax.swing.JScrollPane ScrProduct;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnHome;
    private javax.swing.JButton btnViewBasket;
    private javax.swing.JComboBox<String> cmboQuantity;
    private javax.swing.JLabel lblCategories;
    private javax.swing.JLabel lblComboTitle;
    private javax.swing.JLabel lblError;
    private javax.swing.JLabel lblProduct;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JList<String> lstCategories;
    private javax.swing.JList<String> lstProducts;
    // End of variables declaration//GEN-END:variables
}
